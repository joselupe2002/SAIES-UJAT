unit Detalle;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  PDetalle, Menus, Db, DBTables, ComCtrls, ToolWin, ExtCtrls, Grids,
  DBGrids, StdCtrls, DBCtrls, Mask, DBCGrids, Buttons, Libreria ;

  type
   mygrid=class(TStringGrid)
  public
    procedure MoveColumn(FromIndex, ToIndex: Longint);
    procedure MoveRow(FromIndex, ToIndex: Longint);
  end;

  TFDetalle = class(TPFDetalle)
    Label9: TLabel;
    USUARIO: TDBEdit;
    Label4: TLabel;
    Label1: TLabel;
    URES: TDBEdit;
    Label2: TLabel;
    LURES_USUARIO: TEdit;
    LURES_URES: TEdit;
    Label3: TLabel;
    NUM: TDBEdit;
    procedure FormCreate(Sender: TObject);
    procedure GrabaInsert ; override ;
    procedure GrabaUpdate ; override ;
    function RNombre : String ;  override ;
    procedure Acepta_Seleccion ;  override ;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FDetalle: TFDetalle;
  LING,COLG:INTEGER;
  LINGp,COLGp:INTEGER;
  TABU:BOOLEAN;

implementation


//uses Repo;

{$R *.DFM}


procedure LimpiafileLog(s:string);
begin

end;


 {===============================================================================
 Graba una cadena al archivo LOG que se encuentra en la carpeta File
 ===============================================================================}
procedure savetofileLog(s:string);
begin

end;


 {===============================================================================
 Devuelve la parte izquierda separada por "separador" 01-huimanguillo Res=01
 ===============================================================================}
function str_(cad:string;separador:string):string;
begin

end;


 {===============================================================================
 Procedimiento de Movimiento de Columna de un StringGrid
 ===============================================================================}
procedure mygrid.MoveColumn(FromIndex, ToIndex: Integer);
begin
  inherited;
end;


{===============================================================================
 Procedimiento de Movimiento de Linea de un StringGrid
 ===============================================================================}
procedure mygrid.MoveRow(FromIndex, ToIndex: Integer);
begin
  inherited;
end;

Procedure LimpiaGrid(g:TStringGrid);
begin

end;

{===============================================================================
 Procedimiento para Borrar una Linea de un StringGrid
 ===============================================================================}
procedure borra_row(sender:tobject; lin:integer);
begin
end;

{===============================================================================
 Procedimiento Limpia una Linea de un StringGrid
 ===============================================================================}
procedure limpia_linea(sender:tobject;linea:integer);

begin
end;


procedure TFDetalle.Acepta_Seleccion ;
var campo : TField ;
begin

 campo := nil ;
 if VControl is TDBEdit
 then begin campo := TDBEdit(Vcontrol).Field ;
            campo.DataSet.Edit ;
            campo.Value := QVal.Fields[0].Value ;
            (findcomponent('L'+campo.FieldName) as TEdit).text:=QVal.Fields[1].asstring;

      end;

 if VControl is TDBGrid
 then Campo := TDBGrid(VControl).SelectedField ;


 {if campo <> nil then
 begin
  campo.DataSet.Edit ;
  campo.Value := QVal.Fields[0].Value ;
 end ;   }

 QVal.Close ;
 GValValid.Hide ;
 PCaptura.Show ;
 VControl.SetFocus ;


end ;



function TFDetalle.RNombre : String ;
begin
 VSql.Clear ;
 result := ActiveControl.Name ;
 IF RESULT='URES' THEN
     begin
       Vsql.Add('Select');
       Vsql.Add('URES_URES AS URES,');
       Vsql.Add('URES_DESCRIP AS DESCRIP');
       Vsql.Add('FROM FURES');
     end;
  IF RESULT='USUARIO' THEN
     begin
       Vsql.Add('Select');
       Vsql.Add('USUA_USUARIO AS USUARIO,');
       Vsql.Add('USUA_NOMBRE AS NOMBRE');
       Vsql.Add('FROM SHAKE.SUSUARIO');
     end;
END;


procedure TFDetalle.FormCreate(Sender: TObject);
begin
// Data := TdmDatos.Create(FDetalle) ;
 inherited;
 Height := 250;
 Width :=  554 ;
end;

procedure TFDetalle.GrabaInsert ;
begin
 qInsert.ExecSql ;

end ;

procedure TFDetalle.GrabaUpdate ;
begin
 qUpdate.ExecSql ;
end ;



end.
