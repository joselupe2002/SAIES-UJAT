unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  Grids, ComCtrls, StdCtrls;

type
  TForm1 = class(TForm)
    tab: TPageControl;
    Hoja1: TTabSheet;
    Hoja2: TTabSheet;
    gr: TStringGrid;
    StringGrid2: TStringGrid;
    et: TLabel;
    TabSheet1: TTabSheet;
    Button1: TButton;
    procedure grMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure tabDragDrop(Sender, Source: TObject; X, Y: Integer);
    procedure tabDragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);
    procedure tabMouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.DFM}

procedure TForm1.grMouseDown(Sender: TObject;
  Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
begin
    gr.BeginDrag(false);
    et.caption:='empece..';
end;

procedure TForm1.tabDragDrop(Sender, Source: TObject; X,
  Y: Integer);
var
elTab:integer;

begin
     eltab:=(x div 60);
     Showmessage('Seguro que desea copiar al Tab'+tab.Pages[eltab].Caption);
     tab.ActivePageIndex:=(x div tab.Pages[0].Width);
end;

procedure TForm1.tabDragOver(Sender, Source: TObject; X,
  Y: Integer; State: TDragState; var Accept: Boolean);
begin
et.caption:='empece';
 If SOURCE IS TStringGrid then
    accept:=true;
end;

procedure TForm1.tabMouseMove(Sender: TObject; Shift: TShiftState;
  X, Y: Integer);
begin
    tab.Hint:='x: '+inttostr(x)+' y:'+inttostr(y);
    tab.ShowHint:=true;

end;

end.
